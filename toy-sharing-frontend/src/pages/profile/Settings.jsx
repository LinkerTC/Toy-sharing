import { useState } from 'react'
import { useAuth } from '../../context/AuthContext'

const Settings = () => {
  const { user, logout } = useAuth()
  const [showDeleteModal, setShowDeleteModal] = useState(false)

  const handleDeleteAccount = () => {
    if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t√†i kho·∫£n? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c.')) {
      // Handle account deletion
      alert('T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c x√≥a!')
      logout()
    }
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-4xl mx-auto px-4">

        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            ‚öôÔ∏è C√†i ƒë·∫∑t t√†i kho·∫£n
          </h1>
          <p className="text-gray-600">
            Qu·∫£n l√Ω c√†i ƒë·∫∑t v√† t√πy ch·ªçn cho t√†i kho·∫£n c·ªßa b·∫°n
          </p>
        </div>

        <div className="space-y-6">

          {/* Account Settings */}
          <div className="bg-white rounded-2xl shadow-lg p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-6">üë§ T√†i kho·∫£n</h2>

            <div className="space-y-4">
              <div className="flex items-center justify-between p-4 border border-gray-200 rounded-xl hover:border-pink-500 transition-colors">
                <div>
                  <h4 className="font-semibold text-gray-900">Th√¥ng tin c√° nh√¢n</h4>
                  <p className="text-sm text-gray-600">C·∫≠p nh·∫≠t th√¥ng tin h·ªì s∆° c·ªßa b·∫°n</p>
                </div>
                <a href="/profile/edit" className="bg-pink-100 text-pink-600 px-4 py-2 rounded-lg font-medium hover:bg-pink-200 transition-colors">
                  Ch·ªânh s·ª≠a
                </a>
              </div>

              <div className="flex items-center justify-between p-4 border border-gray-200 rounded-xl hover:border-pink-500 transition-colors">
                <div>
                  <h4 className="font-semibold text-gray-900">ƒê·ªïi m·∫≠t kh·∫©u</h4>
                  <p className="text-sm text-gray-600">C·∫≠p nh·∫≠t m·∫≠t kh·∫©u ƒë·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n</p>
                </div>
                <button className="bg-gray-100 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-200 transition-colors">
                  ƒê·ªïi m·∫≠t kh·∫©u
                </button>
              </div>
            </div>
          </div>

          {/* Notification Settings */}
          <div className="bg-white rounded-2xl shadow-lg p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-6">üîî Th√¥ng b√°o</h2>

            <div className="space-y-4">
              {[
                { title: 'Email th√¥ng b√°o', desc: 'Nh·∫≠n th√¥ng b√°o qua email v·ªÅ ho·∫°t ƒë·ªông t√†i kho·∫£n', checked: true },
                { title: 'Th√¥ng b√°o ƒë·∫∑t m∆∞·ª£n', desc: 'Th√¥ng b√°o khi c√≥ ng∆∞·ªùi mu·ªën m∆∞·ª£n ƒë·ªì ch∆°i', checked: true },
                { title: 'Th√¥ng b√°o tr·∫£ v·ªÅ', desc: 'Nh·∫Øc nh·ªü v·ªÅ th·ªùi h·∫°n tr·∫£ ƒë·ªì ch∆°i', checked: true },
                { title: 'Th√¥ng b√°o khuy·∫øn m√£i', desc: 'Nh·∫≠n th√¥ng tin v·ªÅ c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i', checked: false }
              ].map((setting, index) => (
                <div key={index} className="flex items-center justify-between p-4 border border-gray-200 rounded-xl">
                  <div>
                    <h4 className="font-semibold text-gray-900">{setting.title}</h4>
                    <p className="text-sm text-gray-600">{setting.desc}</p>
                  </div>
                  <label className="relative inline-flex items-center cursor-pointer">
                    <input type="checkbox" className="sr-only peer" defaultChecked={setting.checked} />
                    <div className="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-500"></div>
                  </label>
                </div>
              ))}
            </div>
          </div>

          {/* Privacy Settings */}
          <div className="bg-white rounded-2xl shadow-lg p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-6">üîí Quy·ªÅn ri√™ng t∆∞</h2>

            <div className="space-y-4">
              {[
                { title: 'H·ªì s∆° c√¥ng khai', desc: 'Cho ph√©p ng∆∞·ªùi kh√°c xem h·ªì s∆° c·ªßa b·∫°n', checked: true },
                { title: 'Hi·ªÉn th·ªã s·ªë ƒëi·ªán tho·∫°i', desc: 'Cho ph√©p ng∆∞·ªùi d√πng kh√°c xem s·ªë ƒëi·ªán tho·∫°i', checked: false },
                { title: 'Hi·ªÉn th·ªã email', desc: 'Cho ph√©p li√™n h·ªá qua email', checked: false },
                { title: 'Theo d√µi ho·∫°t ƒë·ªông', desc: 'Ghi nh·∫≠n ho·∫°t ƒë·ªông ƒë·ªÉ c·∫£i thi·ªán d·ªãch v·ª•', checked: true }
              ].map((setting, index) => (
                <div key={index} className="flex items-center justify-between p-4 border border-gray-200 rounded-xl">
                  <div>
                    <h4 className="font-semibold text-gray-900">{setting.title}</h4>
                    <p className="text-sm text-gray-600">{setting.desc}</p>
                  </div>
                  <label className="relative inline-flex items-center cursor-pointer">
                    <input type="checkbox" className="sr-only peer" defaultChecked={setting.checked} />
                    <div className="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-500"></div>
                  </label>
                </div>
              ))}
            </div>
          </div>

          {/* Danger Zone */}
          <div className="bg-white rounded-2xl shadow-lg p-6 border-l-4 border-red-500">
            <h2 className="text-xl font-semibold text-red-600 mb-6">‚ö†Ô∏è V√πng nguy hi·ªÉm</h2>

            <div className="space-y-4">
              <div className="flex items-center justify-between p-4 border border-red-200 rounded-xl bg-red-50">
                <div>
                  <h4 className="font-semibold text-red-900">X√≥a t√†i kho·∫£n</h4>
                  <p className="text-sm text-red-700">X√≥a vƒ©nh vi·ªÖn t√†i kho·∫£n v√† t·∫•t c·∫£ d·ªØ li·ªáu</p>
                </div>
                <button 
                  onClick={() => setShowDeleteModal(true)}
                  className="bg-red-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-red-600 transition-colors"
                >
                  X√≥a t√†i kho·∫£n
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* Delete Modal */}
        {showDeleteModal && (
          <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-2xl shadow-2xl max-w-md w-full p-6">
              <div className="text-center mb-6">
                <div className="text-6xl mb-4">‚ö†Ô∏è</div>
                <h3 className="text-xl font-bold text-gray-900 mb-2">X√≥a t√†i kho·∫£n?</h3>
                <p className="text-gray-600">
                  H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c. T·∫•t c·∫£ d·ªØ li·ªáu v√† ƒë·ªì ch∆°i c·ªßa b·∫°n s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn.
                </p>
              </div>

              <div className="flex gap-3">
                <button 
                  onClick={() => setShowDeleteModal(false)}
                  className="flex-1 bg-gray-100 text-gray-700 px-4 py-3 rounded-xl font-semibold hover:bg-gray-200 transition-colors"
                >
                  H·ªßy
                </button>
                <button 
                  onClick={handleDeleteAccount}
                  className="flex-1 bg-red-500 text-white px-4 py-3 rounded-xl font-semibold hover:bg-red-600 transition-colors"
                >
                  X√≥a t√†i kho·∫£n
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}

export default Settings